{"version":3,"sources":["Filter.js","Notification.js","PersonForm.js","PersonsService.js","Persons.js","App.js","index.js"],"names":["Filter","searchName","searchChange","value","onChange","Notification","message","text","className","type","PersonForm","submitPerson","newName","newNumber","nameChange","numberChange","onSubmit","baseUrl","PersonsService","getAllPeople","axios","get","then","res","data","catch","console","error","getPerson","personId","createPerson","newPerson","post","updatePerson","personData","put","deletePerson","delete","Person","person","removePerson","name","number","onClick","id","window","confirm","finally","_","Persons","people","map","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchName","setMessage","filter","toLocaleLowerCase","includes","clearInputs","notify","setTimeout","getPeopleHook","useEffect","event","target","preventDefault","foundPerson","find","trim","alert","updatedPerson","p","response","status","concat","addPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21b696e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({searchName, searchChange}) => <div>filter shown with <input value={searchName} onChange={searchChange} /></div>;\r\n\r\nexport default Filter;\r\n","const Notification = ({message}) => {\r\n  if (message.text) {\r\n    return (\r\n      <div className={message.type}>\r\n        {message.text}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({submitPerson, newName, newNumber, nameChange, numberChange}) => {\r\n  return (\r\n    <form onSubmit={submitPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={nameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={numberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PersonForm;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAllPeople = () => axios.get(baseUrl)\r\n  .then(res => res.data)\r\n  .catch(console.error);\r\n\r\nconst getPerson = personId => axios.get(`${baseUrl}/${personId}`)\r\n  .then(res => res.data)\r\n  .catch(console.error);\r\n\r\nconst createPerson = newPerson => {\r\n  return axios.post(baseUrl, newPerson)\r\n  .then(res => {\r\n    return res.data;\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n    throw error;\r\n  });\r\n}\r\n\r\nconst updatePerson = (personId, personData) => axios.put(`${baseUrl}/${personId}`, personData)\r\n  .then(res => res.data)\r\n  .catch(error => {\r\n    console.error(error);\r\n    throw error;\r\n  });\r\n\r\nconst deletePerson = (personId) => axios.delete(`${baseUrl}/${personId}`)\r\n.then(res => res.data)\r\n.catch(console.error);\r\n\r\nconst PersonsService = { getAllPeople, getPerson, createPerson, updatePerson, deletePerson };\r\nexport default PersonsService;\r\n  ","import React from 'react';\r\nimport PersonsService from './PersonsService';\r\n\r\nconst Person = ({person, removePerson}) => {\r\n  const deletePerson = ({name, id}) => () => {\r\n    const affirmation = window.confirm(`Delete ${name}?`);\r\n    if (affirmation) {\r\n      PersonsService.deletePerson(id)\r\n        .finally(_ => removePerson(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>{person.name} {person.number} <button onClick={deletePerson(person)}>delete</button></div>\r\n  );\r\n};\r\n\r\nconst Persons = ({people, removePerson}) => people.map(person => <Person key={person.name} person={person} removePerson={removePerson} />)\r\n\r\nexport default Persons;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Notification from './Notification';\r\nimport PersonForm from './PersonForm';\r\nimport Persons from './Persons';\r\nimport PersonsService from './PersonsService';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ searchName, setSearchName ] = useState('');\r\n  const [ message, setMessage ] = useState({});\r\n\r\n  const nameChange = (event) => setNewName(event.target.value);\r\n  const numberChange = (event) => setNewNumber(event.target.value);\r\n  const searchChange = (event) => setSearchName(event.target.value);\r\n\r\n  const people = searchName === '' ? persons : \r\n    persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()));\r\n\r\n  const clearInputs = () => {\r\n    setNewName('');\r\n    setNewNumber('');\r\n  };\r\n\r\n  const notify = (text, type) => {\r\n    setMessage({text, type});\r\n    setTimeout(() => setMessage({text: '', type: ''}), 5000);\r\n  }\r\n\r\n  const addPerson = () => {\r\n    const newPerson = { name: newName, number: newNumber };\r\n    PersonsService.createPerson(newPerson)\r\n      .then(person => {\r\n        setPersons(persons.concat(person));\r\n        notify(`Added ${person.name}`, 'added');\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.error) {\r\n          if (error.response.data.error.includes('to be unique')) {\r\n            notify(error.response.data.error + '. Refetching the phonebook list!', 'error');\r\n            getPeopleHook();\r\n          } else {\r\n            notify(error.response.data.error, 'error');\r\n          }\r\n        } else {\r\n          notify(`An issue occured while trying to update the person`, 'error');\r\n        }\r\n      })\r\n      .finally(clearInputs);\r\n  };\r\n\r\n  const updatePerson = foundPerson => {\r\n    const updatedPerson = {...foundPerson, number: newNumber};\r\n    PersonsService.updatePerson(foundPerson.id, updatedPerson)\r\n      .then(person => {\r\n        setPersons(persons.map(p => p.id === person.id ? person : p));\r\n        notify(`Updated ${person.name}`, 'updated');\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.error) {\r\n          notify(error.response.data.error, 'error');\r\n        } else if (+error.response.status !== 500) {\r\n          notify(`Information of ${foundPerson.name} has laready been removed from server`, 'error');\r\n          setPersons(persons.filter(p => p.id !== foundPerson.id));\r\n        } else {\r\n          notify(`An issue occured while trying to update the person`, 'error');\r\n        }\r\n      })\r\n      .finally(clearInputs);\r\n  };\r\n\r\n  const removePerson = (personId) => {\r\n    notify(`Removed ${persons.find(p => p.id === personId).name}`, 'deleted');\r\n    setPersons(persons.filter(p => p.id !== personId));\r\n  }\r\n\r\n  const submitPerson = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const foundPerson = persons.find(person => {\r\n      return person.name.trim().toLocaleLowerCase() === newName.trim().toLocaleLowerCase();\r\n    });\r\n    \r\n    if (foundPerson) {\r\n      if (foundPerson.number === newNumber) {\r\n        alert(`${newName} with number ${newNumber} is already added to phonebook`);\r\n      } else {\r\n        const affirmation = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\r\n        if (affirmation) {\r\n          updatePerson(foundPerson);\r\n        }\r\n      }\r\n    } else {\r\n      addPerson();\r\n    }\r\n  };\r\n\r\n  const getPeopleHook = () => {\r\n    PersonsService.getAllPeople()\r\n      .then(people => setPersons(people));\r\n  };\r\n\r\n  useEffect(getPeopleHook, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter searchName={searchName} searchChange={searchChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm \r\n        submitPerson={submitPerson} \r\n        newName={newName} \r\n        newNumber={newNumber} \r\n        nameChange={nameChange} \r\n        numberChange={numberChange} \r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons people={people} removePerson={removePerson} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />, \r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}